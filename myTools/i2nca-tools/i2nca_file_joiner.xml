<tool id="i2nca_joiner" name="Join different imzML files together with i2nca" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">

	<description>
        Combine two or more .imzML files together to one file.
        Geometry and location of all files can be controlled.
        It is recommended to perform a normalization before joining.
        The resulting file will be a processed file.
    </description>
	
    <macros>
    <import>macros.xml</import>
    </macros>
    
    <requirements>
    <!-- We'll skip the reqirements for now. Later we get a biocontainer, for now we'll do wonky conda env stuff-->
    </requirements>

    <!-- ? 2DO w/ Niko: better do deal with CLI or cheetath -->
    <command detect_errors="exit_code"><![CDATA[
    cp "${infile.extra_files_path}/imzml" indata1.imzML &&
    cp "${infile.extra_files_path}/ibd" indata1.ibd &&

    cp "${infile2.extra_files_path}/imzml" indata2.imzML &&
    cp "${infile2.extra_files_path}/ibd" indata2.ibd &&

    'i2nca_file_joiner' --nor '$normalization' --pad '$padding' --col 'Â§nr_cols' --pol '${OV_polarity.polarity}' './outdata'  'indata1.imzML' 'indata2.imzML' &&
    
    mkdir $outfile_imzml.files_path &&

    mv ./outdata_joined.imzML "${os.path.join($outfile_imzml.files_path, 'imzml')}" | true &&
    mv ./outdata_joined.ibd "${os.path.join($outfile_imzml.files_path, 'ibd')}" | true &&

    echo "imzML file:" > $outfile_imzml &&
    ls -l "$outfile_imzml.files_path" >> $outfile_imzml

    ]]></command>

    <!-- ? ? 2DO w/ Niko: Adiitional documents that are optional -->
   <inputs>
        <!-- How to add this as a list? -->
        <param name="infile" type="data" format="imzml" label="MSI data" help="Load the .imzml file on which the QC should be performed"/>

        <param name="infile2" type="data" format="imzml" label="MSI data" help="Load the second .imzml file on which the QC should be performed"/>

        <param name="normalization" label="Should a normalizing method be used before joining?" type="select">
                <option value="None"/>
                <option value="RMS"/>
                <option value="TIC"/>
        </param>

        <param name="nr_cols" label="Number of columns" type="int"
        help="Define in how many columns the jioned files should be arranged.
        The resulting rows are filled left to right."/>

        <param name="padding" label="Distance between joined files in pixels" type="int"
                       help="Define how many empty pixels are spaced between two neighbouring files"/>


        <conditional name="OV_polarity">
            <param name="rewrite_polatiry" label="Do you want to overwrite the polarity?
                                                  Combined files can only be of one polarity." type="select">
                <option value="Yes"/>
                <option value="No"/>
            </param>
            <when value="Yes">
                <param name="polarity" label="Overwrite polarity to:" type="select"
                       help="Choose a polarity to overwrite. The old polariy will not be retained.">
                     <option value="Positive"/>
                     <option value="Negative"/>
                </param>
            </when>
            <when value="No">
                <param name="polarity" value="None"/>
            </when>
        </conditional>

    </inputs>

    <!-- ? ? 2DO w/ Niko: where to store pdf files -->
    <outputs>
        <data format="imzml" name="outfile_imzml" label="ProcessedCentroid imzML, Conversion result of ${on_string}: imzML"/>
        <data name="JoinedTableFile" label="Positions in joined file" from_work_dir="./outdata_pixel_transform_matrix.tsv" format="tsv" />
    </outputs>

    <help><![CDATA[
        TODO: Fill in help.
    ]]></help>
</tool>
