<tool id="i2nca_cp_2_pc" name="i2nca Convert ContinuousProfile" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">

	<description>
        Convert profile imzML files with i2nca and m2aia to obtain processed centroid files.

    </description>
	
    <macros>
    <import>macros.xml</import>
    </macros>
    
    <requirements>
    <!-- We'll skip the reqirements for now. Later we get a biocontainer, for now we'll do wonky conda env stuff-->
    </requirements>


    <command detect_errors="exit_code"><![CDATA[
    cp "${infile.extra_files_path}/imzml" indata.imzML &&
    cp "${infile.extra_files_path}/ibd" indata.ibd &&

    #if $choose_strategy.strategy == "set_find_peaks":

        #if $m2aia.use_m2aia_preproc == "FALSE":
            'i2nca_convert_to_pc' 'indata.imzML' './outdata' '$choose_strategy.strategy' '--fp_hei' '$choose_strategy.fp_hei' '--fp_thr' '$choose_strategy.fp_thr' '--fp_dis' '$choose_strategy.fp_dis' &&

            mkdir $outfile_imzml.files_path &&

            mv ./outdata_conv_output_proc_centroid.imzML "${os.path.join($outfile_imzml.files_path, 'imzml')}" | true &&
            mv ./outdata_conv_output_proc_centroid.ibd "${os.path.join($outfile_imzml.files_path, 'ibd')}" | true &&

            echo "imzML file:" > $outfile_imzml &&
            ls -l "$outfile_imzml.files_path" >> $outfile_imzml

        #else if $m2aia.use_m2aia_preproc == "TRUE": 
            'i2nca_convert_to_pc' 'indata.imzML' './outdata' '$choose_strategy.strategy' '--fp_hei' '$choose_strategy.fp_hei' '--fp_thr' '$choose_strategy.fp_thr' '--fp_dis' '$choose_strategy.fp_dis' @M2AIA_PARAMETERS@ &&

            mkdir $outfile_imzml.files_path &&

            mv ./outdata_conv_output_proc_centroid.imzML "${os.path.join($outfile_imzml.files_path, 'imzml')}" | true &&
            mv ./outdata_conv_output_proc_centroid.ibd "${os.path.join($outfile_imzml.files_path, 'ibd')}" | true &&

            echo "imzML file:" > $outfile_imzml &&
            ls -l "$outfile_imzml.files_path" >> $outfile_imzml

        #end if
    #end if
    #if $choose_strategy.strategy == "set_find_cwt_peaks":
        #if $m2aia.use_m2aia_preproc == "FALSE":
        ## <!-- TODO: register cwt in the cli-->
            'i2nca_convert_to_pc' 'indata.imzML' './outdata' '$choose_strategy.strategy' &&

            mkdir $outfile_imzml.files_path &&

            mv ./outdata_conv_output_proc_centroid.imzML "${os.path.join($outfile_imzml.files_path, 'imzml')}" | true &&
            mv ./outdata_conv_output_proc_centroid.ibd "${os.path.join($outfile_imzml.files_path, 'ibd')}" | true &&

            echo "imzML file:" > $outfile_imzml &&
            ls -l "$outfile_imzml.files_path" >> $outfile_imzml

        #else if $m2aia.use_m2aia_preproc == "TRUE":

            'i2nca_convert_to_pc' 'indata.imzML' './outdata' '$choose_strategy.strategy'  @M2AIA_PARAMETERS@ &&

            mkdir $outfile_imzml.files_path &&

            mv ./outdata_conv_output_proc_centroid.imzML "${os.path.join($outfile_imzml.files_path, 'imzml')}" | true &&
            mv ./outdata_conv_output_proc_centroid.ibd "${os.path.join($outfile_imzml.files_path, 'ibd')}" | true &&

            echo "imzML file:" > $outfile_imzml &&
            ls -l "$outfile_imzml.files_path" >> $outfile_imzml
        #end if
    #end if
    ]]></command>

    <inputs>
        <param name="infile" type="data" format="imzml" label="MSI data" help="Load the imzml file (as imzml Composite)"/>

        <conditional name="choose_strategy">
            <param name="strategy" label="Choose how the centroids in the imzML file should be detected:" type="select" help="Different stategies can be used.">
                <option value="set_find_peaks" >Find peaks with local maxima</option>
                <option value="set_find_cwt_peaks" >Find peaks with continuous wavelet transformation</option>
            </param>

            <when value="set_find_peaks">
                <param name="fp_hei" label="Required heith of peak:" type="float"  value="20" 
                       help="Required heith of data point in the spectrum to be considered as peak"/>
                <param name="fp_dis" label="Required minimal horizontal distance:" type="float"  value="3" min="1" 
                    help="The minimal horizontal distance between neighbouring peaks, in data points"/>
                <param name="fp_thr" label="Required threshold between peaks:" type="float"  value="5" 
                    help="The vertical distance to neighboring samples, in data points"/>
            </when>

            <when value="set_find_cwt_peaks">
                <param name="value" label="CWT, not implemented:" type="integer"
                       value="20"/>

            </when>
        </conditional>


       <expand macro="m2aia_preprocessing"/>

    </inputs>

    <outputs>
        <data format="imzml" name="outfile_imzml" label="ProcessedCentroid imzML, Conversion result of ${on_string}: imzML"/>
    </outputs>

    <tests>
        <!-- Test 1: Conversion using loc max with some param-->
        <test>
            <expand macro="cp_infile"/>
            <conditional name="choose_strategy">
                <param name="strategy" value="set_find_peaks" />
                <param name="fp_hei" value="10.5" />
                <param name="fp_dis" value="5.0" />
                <param name="fp_thr" value="3.1" />
            </conditional>
            <conditional name="m2aia">
                <param name="use_m2aia_preproc" value="FALSE" />
            </conditional>
            <output name="outfile_imzml" ftype="imzml">
                <extra_files type="file" file="cp_test1.imzml" name="imzml" lines_diff="6"/>
                <extra_files type="file" file="cp_test1.ibd" name="ibd" compare="sim_size"/>
            </output>
        </test>

        <!-- Test 2: Conversion using cwt
        <!- TODO add to cli 
        <test>
            <expand macro="cp_infile"/>
            <conditional name="choose_strategy">
            ???
                <param name="strategy" value="fixed_binning" />
                <param name="value" value="50" />
            </conditional>
            <conditional name="m2aia">
                <param name="use_m2aia_preproc" value="FALSE" />
            </conditional>
            <output name="outfile_imzml" ftype="imzml">
                <extra_files type="file" file="pp_test2.imzml" name="imzml" lines_diff="6"/>
                <extra_files type="file" file="pp_test2.ibd" name="ibd" compare="sim_size"/>
            </output>
        </test> -->
    
        <!-- Test 3: Conversion using loc max with m2aia preprocessing 
        <!- TODO fix already pushed 
        <test>
            <expand macro="cp_infile"/>
            <conditional name="choose_strategy">
                <param name="strategy" value="fixed_alignment" />
                <param name="value" value="0.5" />
            </conditional>
            <conditional name="m2aia">
                <param name="use_m2aia_preproc" value="TRUE" />
                <param name="nor" value="TIC" />
                <param name="itr" value="Log2" />
                <param name="bsl_hws" value="15" />
                <param name="bsl" value="Median" />
                <param name="smo_hws" value="5" />
                <param name="smo" value="SavitzkyGolay" />
            </conditional>
            <output name="outfile_imzml" ftype="imzml">
                <extra_files type="file" file="pp_test3.imzml" name="imzml" lines_diff="6"/>
                <extra_files type="file" file="pp_test3.ibd" name="ibd" compare="sim_size"/>
            </output>
        </test> -->
    
        <!-- Test 4: Conversion using fixed binning with m2aia preprocessing 
        <test>
            <expand macro="cp_infile"/>
            <conditional name="choose_strategy">
                <param name="strategy" value="fixed_binning" />
                <param name="value" value="50" />
            </conditional>
            <conditional name="m2aia">
                <param name="use_m2aia_preproc" value="TRUE" />
                <param name="nor" value="TIC" />
                <param name="itr" value="Log2" />
                <param name="bsl_hws" value="15" />
                <param name="bsl" value="Median" />
                <param name="smo_hws" value="5" />
                <param name="smo" value="SavitzkyGolay" />
            </conditional>
            <output name="outfile_imzml" ftype="imzml">
                <extra_files type="file" file="pp_test4.imzml" name="imzml" lines_diff="6"/>
                <extra_files type="file" file="pp_test4.ibd" name="ibd" compare="sim_size"/>
            </output>
        </test> -->

        <!-- Test 5: Conversion using loc max with some param on pp-->
        <test>
            <expand macro="pp_infile"/>
            <conditional name="choose_strategy">
                <param name="strategy" value="set_find_peaks" />
                <param name="fp_hei" value="25.2" />
                <param name="fp_dis" value="6.5" />
                <param name="fp_thr" value="4.0" />
            </conditional>
            <conditional name="m2aia">
                <param name="use_m2aia_preproc" value="FALSE" />
            </conditional>
            <output name="outfile_imzml" ftype="imzml">
                <extra_files type="file" file="cp_test5.imzml" name="imzml" lines_diff="6"/>
                <extra_files type="file" file="cp_test5.ibd" name="ibd" compare="sim_size"/>
            </output>
        </test>

    </tests>

    <help><![CDATA[
        
    @I2NCA_DESCRIPTION@

This tool performs the internal conversion from a ContinuousProfile imzml file to a ProcessedCentroid imzml file.
It can also perform basic peak detection on ProcessedProfile imzml files.


**Input data**


@MSIDATA_INPUT_DESCRIPTION@


**Conversion strategy**


The conversion is achieved by using different peak detection methods.
    - Find peaks with local maxima: A local maxima algorithm that finds the maxima based on the set of provided criteria. 
    - Find peaks with continuous wavelet transformation: An implementation of the cwt Algorithm to detect sharp peaks among noisy data. 

@M2AIA_INPUT_DESCRIPTION@
]]></help>
<citations>
    <citation type="bibtex">
        @misc{githubi2nca,
        author = {Jannik Witte},
        title = {i2nca},
        publisher = {GitHub},
        journal = {Github repository},
        url = {https://github.com/cKNUSPeR/i2nca}
    }
    </citation>
    <citation type="bibtex">
        @article{10.1093/gigascience/giab049,
            author = {Cordes, Jonas and Enzlein, Thomas and Marsching, Christian and Hinze, Marven and Engelhardt, Sandy and Hopf, Carsten and Wolf, Ivo},
            title = "{M2aia—Interactive, fast, and memory-efficient analysis of 2D and 3D multi-modal mass spectrometry imaging data}",
            journal = {GigaScience},
            volume = {10},
            number = {7},
            year = {2021},
            month = {07},
            issn = {2047-217X},
            doi = {10.1093/gigascience/giab049},
            url = {https://doi.org/10.1093/gigascience/giab049}
        }
    </citation>
    <citation type="bibtex">
        @article{10.1093/bioinformatics/btl355,
            author = {Du, Pan and Kibbe, Warren A. and Lin, Simon M.},
            title = "{Improved peak detection in mass spectrum by incorporating continuous wavelet transform-based pattern matching}",
            journal = {Bioinformatics},
            volume = {22},
            number = {17},
            pages = {2059-2065},
            year = {2006},
            month = {07},issn = {1367-4803},
            doi = {10.1093/bioinformatics/btl355},
            url = {https://doi.org/10.1093/bioinformatics/btl355},
        }
    </citation>
</citations>
</tool>
